apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin
  namespace: wordpress-stack
  labels:
    app.k8s.io/name: phpmyadmin
spec:
  type: NodePort
  selector:
    app.k8s.io/name: phpmyadmin
  ports:
    - name: http
      port: 8080
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
        name: filebrowser
        namespace: wordpress-stack
        labels:
          app.k8s.io/name: filebrowser
spec:
        type: NodePort
        selector:
          app.k8s.io/name: filebrowser
        ports:
        - protocol: TCP
          port: 80
          nodePort: 30006
          targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
        name: postio
        namespace: wordpress-stack
        labels:
          app.k8s.io/name: postio
spec:
        type: NodePort
        selector:
          app.k8s.io/name: postio
        ports:
        - protocol: TCP
          port: 80
          nodePort: 30007
          targetPort: 80
          name: http
        - protocol: TCP
          port: 443
          nodePort: 30008
          targetPort: 443
          name: https
        - protocol: TCP
          port: 25
          nodePort: 30090
          targetPort: 25
          name: smtp
        - protocol: TCP
          port: 110
          nodePort: 30091
          targetPort: 110
          name: pop
---
apiVersion: apps/v1
kind: Deployment
metadata:
     name: phpmyadmin
     namespace: wordpress-stack
     labels:
        app.k8s.io/name: phpmyadmin
spec:
     replicas: 1
     selector:
        matchLabels:
          app.k8s.io/name: phpmyadmin
     template:
        metadata:
          labels:
            app.k8s.io/name: phpmyadmin
        spec:
          containers:
          - image: phpmyadmin:5.1
            name: phpmyadmin
            envFrom:
            - secretRef:
                name: mysql-pass
            - configMapRef:
                name: padmin
            ports:
            - containerPort: 8080
              name: phpmyadmin
          nodeName: node1
---
apiVersion: apps/v1
kind: Deployment
metadata:
     name: filebrowser
     namespace: wordpress-stack
     labels:
        app.k8s.io/name: filebrowser
spec:
     replicas: 1
     selector:
        matchLabels:
          app.k8s.io/name: filebrowser
     template:
        metadata:
          labels:
            app.k8s.io/name: filebrowser
        spec:
          containers:
          - image: filebrowser/filebrowser:v2
            name: filebrowser
            envFrom:
            - secretRef:
                name: mysql-pass
            - configMapRef:
                name: padmin
            ports:
            - containerPort: 80
              name: filebrowser
            volumeMounts:
              - name: mydata
                mountPath: /srv
              - name: filebrowserjson
                mountPath: "/.filebrowser.json"
                subPath: .filebrowser.json
                readOnly: true
          nodeName: node1
          volumes:
            - name: mydata
              persistentVolumeClaim:
                claimName: mydata
            - name: filebrowserjson
              configMap:
                name: filebrowser.json
---
apiVersion: apps/v1
kind: Deployment
metadata:
     name: postio
     namespace: wordpress-stack
     labels:
        app.k8s.io/name: postio
spec:
     replicas: 1
     selector:
        matchLabels:
          app.k8s.io/name: postio
     template:
        metadata:
          labels:
            app.k8s.io/name: postio
        spec:
          containers:
          - image: analogic/poste.io:2
            name: postio
            envFrom:
            - secretRef:
                name: postio-pass
            - configMapRef:
                name: postiocm
            ports:
            - containerPort: 80
              name: postio
            - containerPort: 443
              name: postios
            - containerPort: 25
              name: smtp
              protocol: TCP
            - containerPort: 110
              name: pop
              protocol: TCP
            volumeMounts:
              - name: postiostorage
                mountPath: /data
          nodeName: node1
          volumes:
            - name: postiostorage
              persistentVolumeClaim:
                claimName: postiostorage
